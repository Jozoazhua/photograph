name: Build and Release

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact_name: downloader.exe
            asset_name: downloader-windows.exe
          - os: macos-13
            artifact_name: downloader-intel.dmg
            asset_name: downloader-macos-intel.dmg
            arch: intel
          - os: macos-latest
            artifact_name: downloader-arm64.dmg
            asset_name: downloader-macos-arm64.dmg
            arch: arm64

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install UPX (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install upx --no-progress

      - name: Install UPX (macOS)
        if: contains(matrix.os, 'macos')
        run: brew install upx

      - name: Install dependencies (macOS)
        if: contains(matrix.os, 'macos')
        run: brew install create-dmg

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller Pillow

      - name: Create .icns icon (macOS)
        if: contains(matrix.os, 'macos')
        run: |
          mkdir -p icon.iconset
          sips -z 16 16 icon.png --out icon.iconset/icon_16x16.png
          sips -z 32 32 icon.png --out icon.iconset/icon_16x16@2x.png
          sips -z 32 32 icon.png --out icon.iconset/icon_32x32.png
          sips -z 64 64 icon.png --out icon.iconset/icon_32x32@2x.png
          sips -z 128 128 icon.png --out icon.iconset/icon_128x128.png
          sips -z 256 256 icon.png --out icon.iconset/icon_128x128@2x.png
          sips -z 256 256 icon.png --out icon.iconset/icon_256x256.png
          sips -z 512 512 icon.png --out icon.iconset/icon_256x256@2x.png
          sips -z 1024 1024 icon.png --out icon.iconset/icon_512x512@2x.png
          iconutil -c icns icon.iconset

      - name: Build Executable with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: pyinstaller --onefile --windowed --icon=icon.png --name=${{ matrix.artifact_name }} --upx-dir . --upx-exclude vcruntime140.dll photograph.py

      - name: Build Executable with PyInstaller (macOS)
        if: contains(matrix.os, 'macos')
        run: pyinstaller --onefile --windowed --icon=icon.icns --name=downloader photograph.py

      - name: Create DMG (macOS)
        if: contains(matrix.os, 'macos')
        run: |
          create-dmg \
            --volname "downloader-${{ matrix.arch }}" \
            --volicon "icon.icns" \
            --window-pos 200 120 \
            --window-size 600 400 \
            --icon-size 100 \
            --icon "downloader.app" 175 190 \
            --hide-extension "downloader.app" \
            --app-drop-link 425 190 \
            "dist/${{ matrix.artifact_name }}" \
            "dist/downloader.app"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: dist/${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release and Upload
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/*.exe
            dist/**/*.dmg
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}